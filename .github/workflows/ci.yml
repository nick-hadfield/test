name: build
on:
  push:
  pull_request:

jobs:

  build:
    name: Configuration
    runs-on: ubuntu-latest
    env:
      COVERAGE_THRESHOLD: 75
      VARIABLE: 'FOO'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Say hello
        uses: ./.github/actions/say-hello@v1
        with:
          name: OctoCat
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull image
        run: |
          docker pull avalier/helloworld

      - name: Push docker image
        uses: ./.github/actions/bhp-ecr-docker-push
        with:
          imageName: avalier/helloworld
          imageTag: ${{github.sha}}  

      #- name: Login to Amazon ECR
      #  id: login-ecr
      #  uses: aws-actions/amazon-ecr-login@v1
      #
      #- name: Tag, and push image to Amazon ECR
      #  env:
      #    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #    IMAGE_NAME: avalier/helloworld
      #    IMAGE_TAG: ${{github.sha}}
      #  run: |
      #
      #    # Create/upsert the "repository" if it doesnt exist in the ECR registry //
      #    if [ -z $(aws ecr describe-repositories | jq -r ".repositories | map(select(.repositoryName == \"$IMAGE_NAME\"))[].repositoryName") ]
      #    then
      #      aws ecr create-repository --repository-name $IMAGE_NAME
      #    fi
      #    
      #    docker pull $IMAGE_NAME
      #
      #    # Label using sha #
      #    echo "Pushing $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG..."
      #    docker tag $IMAGE_NAME $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
      #    docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

      #- name: Get Foo
      #  env: 
      #    FOO: ${{ secrets[env.VARIABLE] }}
      #    GITHUB_TOKEN: ${{secrets.PAT}}
      #  run: |
      #    VALUE=$FOO 
      #    JSON=$(echo $FOO | jq ".Foo")
      #    echo "Foo - $FOO"
      #    echo $(echo $FOO | ./bin/set-kvp.sh "Hello" "World")
      #    echo "Repository ${{ github.repository }}"
      #    gh secret set VERSIONS -b '{ "A": "B" }' -R ${{github.repository}}
      #- name: Set version
      #  uses: ./.github/actions/set-version@v1
      #  with:
      #    githubToken: ${{secrets.PAT}}
      #    name: "test"



# gh secret set VERSIONS -b "{}" -R nick-hadfield/test
#echo {{github.token}} | gh auth login --with-token